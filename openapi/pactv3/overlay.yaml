overlay: 1.0.0

info:
  title: Overlay for PACT v3
  version: 1.0.0

actions:

- target: $.paths
  description: "Skip code generation for requests"
  remove: true

- target: $.components.responses
  description: "Skip code generation for responses"
  remove: true

- target: $.components.securitySchemes
  description: "Skip code generation for security schemes"
  remove: true

- target: $..[?(@.format == "uuid")].format
  remove: true

- target: $.components.schemas.CarbonFootprint.oneOf
  description: "Remove oneOf from CarbonFootprint (requires patching for better Go code)"
  remove: true

- target: $.components.schemas.RequestCreatedEvent.properties.data
  description: "Extract data component from RequestCreatedEvent"
  remove: true

- target: $.components.schemas
  description: "Extract data component from RequestCreatedEvent"
  update:
    RequestCreatedEvent:
      properties:
        data:
          $ref: '#/components/schemas/RequestCreatedEventData'
    RequestCreatedEventData:
      type: object
      description: |
        Criteria for filtering ProductFootprint requests.
      properties:
        productId:
          description: >-
            One or more product IDs. Will return all footprints which have a
            corresponding ID in their `productIds` attribute. The match must
            be-case insensitive. Note that a footprint itself can also have
            multiple product IDs.
          type: array
          items:
            type: string
            format: urn
            pattern: '^([uU][rR][nN]):'
        companyId:
          description: >-
            One or more company IDs. Will return all footprints which have a
            corresponding ID in their `companyId` attribute. The match must
            be case-insensitive. Note that a footprint itself can also have
            multiple company IDs.
          type: array
          items:
            type: string
            format: urn
            pattern: '^([uU][rR][nN]):'
        geography:
          description: >-
            One or more geographic specifiers. Values specified can denote
            `geographyRegion` or `geographyCountry` or
            `geographyCountrySubdivision`. Will return all footprints within
            the specified geography(s). The match must be-case insensitive.
          type: array
          items:
            type: string
        classification:
          description: >-
            One or more product classifications. Will return all footprints
            with corresponding values in the `productClassifications`
            attribute. Note that a footprint itself can have multiple
            classifications. The match must be-case insensitive.
          type: array
          items:
            type: string
            format: urn
            pattern: '^([uU][rR][nN]):'
        validOn:
          description: >
            If present, MUST match all PCFs which were valid on the date
            specified: start validity period <= validOn <= end validity
            period. See [[#validity-period]] for determining validity
            period.
          type: string
          format: date-time
        validAfter:
          description: >
            If present, MUST match PCFs with a validity period start >
            validAfter.

            See [[#validity-period]] for determining validity period.
          type: string
          format: date-time
        validBefore:
          description: >
            If present, MUST match PCFs with a validity period end <
            validBefore

            See [[#validity-period]] for determining validity period.
          type: string
          format: date-time
        status:
          description: >
            If present, MUST be "Active" or "Deprecated". If not specified,
            will return footprints regardless of status. The match must
            be-case insensitive.
          type: string
          enum:
            - Active
            - Deprecated
        comment:
          description: |
            Free text comment.
          type: string

- target: $..[?(@.type=="array")]
  description: "Skip pointer to Go slices"
  update:
    x-go-type-skip-optional-pointer: true

- target: $..[?(@.type=="string")]
  description: "Skip optional pointer for strings"
  update:
    x-go-type-skip-optional-pointer: true

- target: $..[?(@.format=="date-time")]
  description: "Skip optional pointer for timestamps"
  update:
    x-go-type-skip-optional-pointer: true
